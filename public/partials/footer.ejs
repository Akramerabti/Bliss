
<div class="cursor"></div>
<div class="inner-dot"></div>
<div class="Chat-Bot">
  <button  class="btn" id="bot-formbutton">ðŸ¤–</button>
  <form  id="bot-entering">
    <div class="bot-control" >
      <label for ="group"> Recommended Groups </label>
       <input
        type = "text"
        name = "GroupID"
        id="GroupID"
        placeholder="Enter a url"
        required
        />
    
        <div class="flex">
          <button type= "submit" class="btn">+</button>
        </div>
    </div>
  </form >
</div>
<footer>Copyright 2022 </footer>
</body>
<script src="/socket.io/socket.io.js"></script>
<script >
 
const cursor = document.querySelector('.cursor');
const innerDot = document.querySelector('.inner-dot');
const botButton = document.getElementById("bot-formbutton");
const botForm = document.getElementById("bot-entering");

let isPersonalFormVisible = false;

botButton.addEventListener("click", () => {
  if (isPersonalFormVisible) {
    // If the personal form is visible, hide it
    botForm.style.display = "none";
    isPersonalFormVisible = false; // Set it to false to indicate it's hidden
  } else {
    // If the personal form is hidden, show it
    botForm.style.display = "block";
    isPersonalFormVisible = true; // Set it to true to indicate it's visible


document.getElementById('bot-entering').addEventListener('submit', async function (e) {
  e.preventDefault(); // Prevent the default form submission
  
  // Get the form data
  const formData = new FormData(this);

  try {
            const res = await fetch('/chatpost', { 
                method: "POST",
                body: JSON.stringify({ formData }), // passing data from the input values to the signup POST function
                headers: { "Content-Type" : "application/json"}
            })} 
         catch (err) {
            console.log(err)
        }
      })
  }
})

document.addEventListener('mousemove', (e) => {
  setTimeout(() => {
    cursor.style.transition = 'transform 0.5s ease-out';
    const x = e.clientX;
    const y = e.clientY + window.scrollY; // Adjust for vertical scroll
    cursor.style.left = `${x}px`;
    cursor.style.top = `${y}px`;
  }, 100);

  setTimeout(() => {
    innerDot.style.transition = 'transform 0.2s ease-out';
    const x = e.clientX;
    const y = e.clientY + window.scrollY; // Adjust for vertical scroll
    innerDot.style.left = `${x}px`;
    innerDot.style.top = `${y}px`;
  }, 50);
});

document.addEventListener('click', () => {
  cursor.classList.add('click');
  setTimeout(() => {
    cursor.classList.remove('click');
  }, 200);
});

function uploadUserProfiles() {
    const fileInput = document.getElementById('profile-upload-input');
    const formData = new FormData();
    formData.append('profiles', fileInput.files[0]);

    fetch('/upload-profiles', {
        method: 'POST',
        body: formData,
    })
    .then((response) => response.json())
    .then((data) => {
        console.log(data.message); // Display success message
    })
    .catch((error) => {
        console.error('Error uploading profiles:', error);
    });
}
</script>
</html>