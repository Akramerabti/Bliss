<%- include('../public/partials/header'); -%>

    <h1>Set Your Password</h1>
    <form>
      <label for="password ">Enter desired password</label>
      <input placeholder="Password" name="password" type="password" required/> <!Box for the username>
   
        <label for="passwordcheck ">Enter desired password</label>
        <input placeholder="Password Check" name="passwordcheck" type="password" required/> <!Box for the username>
        <div class="password.error"></div> 
        
         <button>Verify</button>
    </form>
    
  

    <a href="/login">Already have an account?</a>

</body>
</html>
<script>
  const form =document.querySelector('form'); //searches for "form" info

  const passError = document.querySelector('.password.error'); // grabs the "<div>" of email error from the form
 
    form.addEventListener("submit", async (e) => {
      e.preventDefault(); //prevents refreshing


     
      // get the values
      const password = form.password.value // form.the name of the input to get the value

      try {
          const res = await fetch('/set-password', { 
              method: "POST",
              body: JSON.stringify({password:password}), // passing data from the input values to the signup POST function
              headers: { "Content-Type" : "application/json"}
          })

          const data = await res.json() // DATA OF THE JSON RESPONSE OF THE SERVER (most of its response come from the authController. await is when an event is asynchronous, gives back the user id


          if(data.errors){ // if there is errors coming from the json response
             passError.textContent =data.errors // populates the div class email error in the form with the errors handle that we built in authController
              console.error("Signup failed:", data.errors);
          }

          if (data.user) {
             var currentUrl = window.location.href;
  
  // Remove any query parameters and hash fragments from the URL
         var cleanUrl = currentUrl.split('?')[0].split('#')[0];

  // Get the last directory in the path
         var lastDirectory = cleanUrl.substring(0, cleanUrl.lastIndexOf('/'));

  // Redirect to the last directory
         location.assign(lastDirectory);
            }
          

      } catch (err) {
          console.log(err)

      }
    })
      
</script>
<%- include('../public/partials/footer'); -%>