
<%- include('partials/header'); -%>
<body>
    
    <h2>Log In</h2>



    <form> <!form for the login system as a method to post>

            <label for ="name">Username or email</label>
            <input placeholder="Name / email" name="name" type="text" required/> <!Box for the username>
            <div class="name error"></div>
        
            <label for ="password">Password</label>
            <input placeholder="Password "  name="password" type="password" required /> <!box for the password with type password so we don't see it>
            <div class="password error"></div>
        
            <button>Login</button>
        
    </form>

    <script>
        const form =document.querySelector('form'); //searches for "form" info
        const emailError = document.querySelector('.name.error'); // grabs the "<div>" of email error from the form
        const nameError = document.querySelector('.name.error'); // grabs the "<div>" of email error from the form
        const passwordError = document.querySelector('.password.error'); // grabs the "<div>" of email error from the form
    
        form.addEventListener("submit", async (e) => { //Waits for submit event from input button of form to take in the event object
            e.preventDefault(); //prevents refreshing

            //reset errors everytime there is a submit
        emailError.textContent = "" 
        nameError.textContent = ""
        passwordError.textContent = ""
    
            // get the values
            const email = form.name.value // form.the name of the input to get the value
            const name = form.name.value // form.the name of the input to get the value
            const password = form.password.value // form.the name of the input to get the value
    
            try {
            const res = await fetch('/login', { 
                method: "POST",
                body: JSON.stringify({ name:name, email:email, password}), // passing data from the input values to the signup POST function
                headers: { "Content-Type" : "application/json"}
            })

            const data = await res.json() // DATA OF THE JSON RESPONSE OF THE SERVER (most of its response come from the authController. await is when an event is asynchronous, gives back the user id

            if(data.errors){ // if there is errors coming from the json response
                nameError.textContent = data.errors.name // populates the div class email error in the form with the errors handle that we built in authController
                passwordError.textContent =data.errors.password
            }

            if(data.user) { // if there is data from the user
                var currentUrl = window.location.href;

            // Remove any query parameters and hash fragments from the URL
            var cleanUrl = currentUrl.split('?')[0].split('#')[0];

            // Get the last directory in the path
            var lastDirectory = cleanUrl.substring(0, cleanUrl.lastIndexOf('/'));

            // Redirect to the last directory
            location.assign(lastDirectory);
            }

        else{ const res = await fetch('/login', { 
                method: "POST",
                body: JSON.stringify({name:name, email:email, password}), // passing data from the input values to the signup POST function
                headers: { "Content-Type" : "application/json"}
            })

            const data = await res.json() // DATA OF THE JSON RESPONSE OF THE SERVER (most of its response come from the authController. await is when an event is asynchronous, gives back the user id
            console.log(data);

            if(data.errors){ // if there is errors coming from the json response
                emailError.textContent =data.errors.email // populates the div class email error in the form with the errors handle that we built in authController
                passwordError.textContent =data.errors.password
            }

            if(data.user) { // if there is data from the user
                var currentUrl = window.location.href;

            // Remove any query parameters and hash fragments from the URL
            var cleanUrl = currentUrl.split('?')[0].split('#')[0];

            // Get the last directory in the path
            var lastDirectory = cleanUrl.substring(0, cleanUrl.lastIndexOf('/'));

            // Redirect to the last directory
            location.assign(lastDirectory);
            }

        }

        } 
         catch (err) {
            console.log(err)

        }


        })
    </script>

<a href="/signup">Sign Up Here</a>

<%- include('partials/footer'); -%>
